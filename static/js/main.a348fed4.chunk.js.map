{"version":3,"sources":["redux/actionTypes.js","redux/reducers/drawer.js","redux/reducers/user.js","redux/reducers/index.js","redux/store.js","redux/actions.js","AppBar.js","BottomNavigation.js","Login.js","Logout.js","Drawer.js","Api.js","Card.js","Home.js","Profile.js","Title.js","Table.js","Theme.js","Youtube.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["LOGOUT","TOGGLE_DRAWER","initialState","open","drawer","state","action","type","payload","loggedIn","localStorage","getItem","user","combineReducers","createStore","rootReducer","toggleDrawer","useStyles","makeStyles","title","flexGrow","connect","classes","AppBar","position","Toolbar","Typography","variant","className","IconButton","edge","color","aria-label","onClick","root","bottom","width","ProjectOneBottomNavigation","BottomNavigation","showLabels","BottomNavigationAction","label","icon","ProjectOneLogin","ListItem","button","window","location","href","origin","ListItemIcon","ListItemText","primary","logout","sessionStorage","list","history","useHistory","Drawer","anchor","onClose","role","List","push","ProjectOneApi","fetch","then","response","json","theme","marginBottom","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","ProjectOneCard","index","Card","CardHeader","Avatar","subheader","CardMedia","image","CardContent","component","CardActions","disableSpacing","ProjectOneHome","useState","users","setUsers","useEffect","data","style","padding","map","ProjectOneProfile","session","setSession","userSession","Object","keys","reduce","obj","key","ow_aem_name","ow_aem_email","ProjectOneTitle","children","table","margin","createData","name","calories","fat","carbs","protein","rows","ProjectOneTable","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","row","scope","createMuiTheme","palette","main","ProjectOneTheme","ThemeProvider","iframe","top","left","wrapper","paddingBottom","ProjectOneYoutube","src","frameBorder","allow","allowFullScreen","ProjectOneApp","store","basename","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.a348fed4.chunk.js","sourcesContent":["export const LOGOUT = 'LOGOUT';\nexport const TOGGLE_DRAWER = 'TOGGLE_DRAWER';\n","import { TOGGLE_DRAWER } from '../actionTypes';\n\nconst initialState = {\n    open: false,\n};\n\nconst drawer = (state = initialState, action) => {\n  switch (action.type) {\n    case TOGGLE_DRAWER: {\n      return { ...state, open: action.payload.open }\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default drawer;\n","import { LOGOUT } from '../actionTypes';\n\nconst initialState = {\n  loggedIn: localStorage.getItem('amg_logged_in') ? true : false,\n};\n\nconst user = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGOUT: {\n      return { ...state, loggedIn: false }\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default user;\n","import { combineReducers } from 'redux';\nimport drawer from './drawer';\nimport user from './user';\n\nexport default combineReducers({ drawer, user });\n","import { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nexport default createStore(rootReducer);\n","import { LOGOUT, TOGGLE_DRAWER } from './actionTypes';\n\nexport const logout = () => ({\n  type: LOGOUT,\n  payload: {},\n});\n\nexport const toggleDrawer = (open) => ({\n  type: TOGGLE_DRAWER,\n  payload: {\n    open,\n  },\n});\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { toggleDrawer } from './redux/actions';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction ProjectOneAppBar({ toggleDrawer }) {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\" className={classes.title}>\n          Team Lounge\n        </Typography>\n        <IconButton edge=\"end\" color=\"inherit\" aria-label=\"Open menu\" onClick={() => toggleDrawer(true)}>\n          <MenuIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default connect(\n  null,\n  { toggleDrawer },\n)(ProjectOneAppBar)\n\nProjectOneAppBar.propTypes = {\n  toggleDrawer: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\n\nconst useStyles = makeStyles({\n  root: {\n    bottom: 0,\n    position: 'fixed',\n    width: '100%',\n  },\n});\n\nfunction ProjectOneBottomNavigation() {\n  const classes = useStyles();\n  // const [value, setValue] = React.useState(0);\n\n  return (\n    <BottomNavigation\n      // value={value}\n      // onChange={(event, newValue) => {\n      //   setValue(newValue);\n      // }}\n      showLabels\n      className={classes.root}\n    >\n      <BottomNavigationAction label=\"Home\" icon={<RestoreIcon />} />\n      <BottomNavigationAction label=\"Notifications\" icon={<FavoriteIcon />} />\n      <BottomNavigationAction label=\"Messages\" icon={<LocationOnIcon />} />\n      <BottomNavigationAction label=\"Profile\" icon={<RestoreIcon />} />\n    </BottomNavigation>\n  );\n}\n\nexport default ProjectOneBottomNavigation;\n","import ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nfunction ProjectOneLogin() {\n  const handleClick = () => {\n    window.location.href = `${window.location.origin}/bin/daimler/public/ciam/authent.html?resource=%2F`\n  }\n\n  return (\n    <ListItem button onClick={handleClick}>\n      <ListItemIcon><ChevronRightIcon /></ListItemIcon>\n      <ListItemText primary=\"Login\" />\n    </ListItem>\n  );\n}\n\nexport default ProjectOneLogin;\n","import { connect } from 'react-redux';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nimport { logout } from './redux/actions';\n\nfunction ProjectOneLogout({ logout }) {\n  const handleClick = () => {\n    window.location.href = `${window.location.origin}/bin/daimler/public/ciam/oidc-logout.html?pwa=true`\n  }\n\n  return (\n    <ListItem button onClick={handleClick}>\n      <ListItemIcon><ChevronRightIcon /></ListItemIcon>\n      <ListItemText primary={`Logout \"${sessionStorage.getItem('ow_aem_firstname')}\"`} />\n    </ListItem>\n  );\n}\n\nexport default connect(\n  null,\n  { logout },\n)(ProjectOneLogout);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nimport ProjectOneLogin from './Login';\nimport ProjectOneLogout from './Logout';\nimport { toggleDrawer } from './redux/actions';\n\nconst useStyles = makeStyles(() => ({\n  list: {\n    width: 300,\n  },\n}));\n\nconst mapStateToProps = (state) => {\n  return {\n    open: state.drawer.open,\n    loggedIn: state.user.loggedIn,\n  };\n};\n\nfunction ProjectOneDrawer({ loggedIn, open, toggleDrawer }) {\n  const classes = useStyles();\n  const history = useHistory();\n\n  return (\n    <Drawer anchor=\"right\" open={open} onClose={() => toggleDrawer(false)}>\n      <div\n        className={classes.list}\n        role=\"presentation\"\n        onClick={() => toggleDrawer(false)}\n        // onKeyDown={() => toggleDrawer(false)}\n      >\n        <List>\n          <ListItem button onClick={() => history.push('/')}>\n            <ListItemIcon><ChevronRightIcon /></ListItemIcon>\n            <ListItemText primary=\"Back home\" />\n          </ListItem>\n          {/* <ListItem button onClick={() => history.push('/profile')}>\n            <ListItemIcon><ChevronRightIcon /></ListItemIcon>\n            <ListItemText primary=\"Profile\" />\n          </ListItem> */}\n          <ListItem button onClick={() => history.push('/table')}>\n            <ListItemIcon><ChevronRightIcon /></ListItemIcon>\n            <ListItemText primary=\"Table\" />\n          </ListItem>\n          <ListItem button onClick={() => history.push('/youtube')}>\n            <ListItemIcon><ChevronRightIcon /></ListItemIcon>\n            <ListItemText primary=\"Youtube\" />\n          </ListItem>\n          {loggedIn ? <ProjectOneLogout /> : <ProjectOneLogin />}\n        </List>\n      </div>\n    </Drawer>\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  { toggleDrawer },\n)(ProjectOneDrawer);\n\nProjectOneDrawer.propTypes = {\n  open: PropTypes.bool.isRequired,\n  toggleDrawer: PropTypes.func.isRequired,\n};\n","function ProjectOneApi() {\n  return fetch('https://reqres.in/api/users')\n    .then(response => response.json());\n}\n\nexport default ProjectOneApi;\n","// import { useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\n// import Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // maxWidth: 345,\n    marginBottom: 16,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nfunction ProjectOneCard({ index }) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            R\n          </Avatar>\n        }\n        action={\n          <IconButton aria-label=\"settings\">\n            <MoreVertIcon />\n          </IconButton>\n        }\n        title={`Mercedes-AMG GT 63 4-Door Coupé record lap ${index + 1}`}\n        subheader=\"November 18, 2020\"\n      />\n      <CardMedia\n        className={classes.media}\n        image=\"cars.jpg\"\n        title=\"Mercedes-AMG GT 63 4-Door Coupé record lap\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          How close the new Mercedes-AMG GT Black Series (fuel consumption combined: 12.8 l/100 km; CO2 emissions combined: 292 g/km) actually is to motorsport has now been impressively demonstrated by GT3 racer Maro Engel on the Nordschleife of the Nürburgring.\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton>\n        <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default ProjectOneCard;\n","import { useEffect, useState } from 'react';\n\nimport ProjectOneApi from './Api';\nimport ProjectOneCard from './Card';\n\nfunction ProjectOneHome() {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    ProjectOneApi().then(data => setUsers(data.data));\n\n    return () => {\n      setUsers([]);\n    };\n  }, []);\n\n  return (\n    <div style={{ padding: 16 }}>\n      {users.map((user, index) => <ProjectOneCard key={index} index={index} />)}\n    </div>\n  );\n}\n\nexport default ProjectOneHome;\n","import { useState } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport { useEffect } from 'react';\n\nfunction ProjectOneProfile() {\n  const [session, setSession] = useState({});\n\n  useEffect(() => {\n    const userSession = Object.keys(sessionStorage).reduce((obj, key) => {\n      obj[key] = sessionStorage.getItem(key);\n      return obj;\n    }, {});\n    setSession(userSession);\n  }, []);\n\n  return (\n    <>\n      <Typography variant=\"h6\" component=\"h1\">My profile</Typography>\n      <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n        <ListItem>\n          <ListItemText primary={session.ow_aem_name} />\n        </ListItem>\n        <ListItem>\n          <ListItemText primary={session.ow_aem_email} />\n        </ListItem>\n      </List>\n    </>\n  );\n}\n\nexport default ProjectOneProfile;\n","import PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nfunction ProjectOneTitle({ children }) {\n  return (\n    <Typography component=\"h1\" variant=\"h6\">{children}</Typography>\n  );\n}\n\nexport default ProjectOneTitle;\n\nProjectOneTitle.propTypes = {\n  children: PropTypes.string.isRequired,\n};\n","import { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport ProjectOneTitle from './Title';\n\nconst useStyles = makeStyles({\n  table: {\n    color: 'white',\n    margin: '8px',\n    width: 'calc(100% - 16px)',\n  },\n});\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nfunction ProjectOneTable() {\n  const classes = useStyles();\n\n  return (\n    <>\n      <ProjectOneTitle>Table component</ProjectOneTitle>\n      <TableContainer>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Dessert (100g serving)</TableCell>\n              <TableCell align=\"right\">Calories</TableCell>\n              <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n              <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n              <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"right\">{row.calories}</TableCell>\n                <TableCell align=\"right\">{row.fat}</TableCell>\n                <TableCell align=\"right\">{row.carbs}</TableCell>\n                <TableCell align=\"right\">{row.protein}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n\nexport default ProjectOneTable;\n","import PropTypes from 'prop-types';\n\nimport { unstable_createMuiStrictModeTheme as createMuiTheme, ThemeProvider } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#000',\n    },\n  },\n});\n\nfunction ProjectOneTheme({ children }) {\n  return (\n    <ThemeProvider theme={theme}>\n      {children}\n    </ThemeProvider>\n  );\n}\n\nexport default ProjectOneTheme;\n\nProjectOneTheme.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nimport ProjectOneTitle from './Title';\n\nconst useStyles = makeStyles({\n  iframe: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n  },\n  wrapper: {\n    position: 'relative',\n    paddingBottom: '56.25%', /* 16:9 */\n    height: 0,\n  },\n});\n\nfunction ProjectOneYoutube() {\n  const classes = useStyles();\n\n  return (\n    <>\n      <ProjectOneTitle>Youtube component</ProjectOneTitle>\n      <div className={classes.wrapper}>\n        <iframe className={classes.iframe} width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/YXaD0UxGmVc\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen title=\"Youtube\"></iframe>\n      </div>\n    </>\n  );\n}\n\nexport default ProjectOneYoutube;\n","import { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport ProjectOneAppBar from './AppBar';\nimport ProjectOneBottomNavigation from './BottomNavigation';\nimport ProjectOneDrawer from './Drawer';\nimport ProjectOneHome from './Home';\nimport ProjectOneProfile from './Profile';\nimport ProjectOneTable from './Table';\nimport ProjectOneTheme from './Theme';\nimport ProjectOneYoutube from './Youtube';\n\nimport './App.css';\n\nfunction ProjectOneApp() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter basename=\"/\">\n        <ProjectOneTheme>\n          <div className=\"App\">\n            <ProjectOneAppBar />\n            <ProjectOneDrawer />\n            <Switch>\n              <Route path=\"/profile\">\n                <ProjectOneProfile />\n              </Route>\n              <Route path=\"/table\">\n                <ProjectOneTable />\n              </Route>\n              <Route path=\"/youtube\">\n                <ProjectOneYoutube />\n              </Route>\n              <Route path=\"/\">\n                <ProjectOneHome />\n              </Route>\n            </Switch>\n            <ProjectOneBottomNavigation />\n          </div>\n        </ProjectOneTheme>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default ProjectOneApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport ProjectOneApp from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ProjectOneApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}